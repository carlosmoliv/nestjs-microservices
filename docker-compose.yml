version: "3.8"

services:
  workflows-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=workflows-service
    command: npm run start:dev -- workflows-service
    environment: # Specified environment variables that will be passed to the container
      - POSTGRES_HOST=workflows-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
      - RABBITMQ_URL=amqp://rabbitmq:5672
    deploy:
      replicas: 3 # This instructs Docker Compose to start 3 instances of the "workflows-service" container
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      # This instructs Docker Compose to mount the "workflows-service" directory  on the host to the "/usr/src/app"
      # This allows us to make changes to the code on the host and have them reflected in the container before starting the "workflows-service"
      - ./apps/workflows-service:/usr/src/app/apps/workflows-service
    depends_on: # This instructs Docker Compose to start the "workflows-db" container before starting the "workflows-service"
      - workflows-db
      - rabbitmq
  workflows-db:
    image: postgres:13.2-alpine
    environment: # Making sure these environment variables match the ones we specified in the "workflows-service"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
  virtual-facility:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=virtual-facility
    command: npm run start:dev -- virtual-facility
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=virtual-facility-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      - ./apps/virtual-facility:/usr/src/app/apps/virtual-facility
    depends_on:
      - virtual-facility-db
      - workflows-service
      - rabbitmq
  virtual-facility-db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
  nats:
    image: nats:2.2.2-alpine
  alarms-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-service
    command: npm run start:dev -- alarms-service
    environment:
      - NATS_URL=nats://nats:4222
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      - ./apps/alarms-service:/usr/src/app/apps/alarms-service
    depends_on:
      - nats
      - rabbitmq
  alarms-generator:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-generator
    command: npm run start:dev -- alarms-generator
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      - ./apps/alarms-generator:/usr/src/app/apps/alarms-generator
    depends_on:
      - nats
  alarms-classifier-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=alarms-classifier-service
    command: npm run start:dev -- alarms-classifier-service
    environment:
      - NATS_URL=nats://nats:4222
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      - ./apps/alarms-classifier-service:/usr/src/app/apps/alarms-classifier-service
    depends_on:
      - nats
  notifications-service:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=notifications-service
    command: npm run start:dev -- notifications-service
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      # Note: This is usually not a good practice to mount the "node_modules" directory on the host to the container
      - ./apps/notifications-service:/usr/src/app/apps/notifications-service
    depends_on:
      - rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3